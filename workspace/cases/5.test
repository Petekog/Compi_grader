#use "semantic-analyser.ml";;
   
let input = Semantics.run_semantics  (If (Applic (LambdaSimple (["y"], Var "x"), []),
  Applic
   (LambdaSimple (["x"],
     Seq
      [Set (Var "x", Var "y");
       LambdaSimple ([], Set (Var "x", Const (Sexpr (Number (Fraction (1, 1))))))]),
   [Const (Sexpr (Symbol "a"))]),
  LambdaSimple (["x"], Set (Var "x", Var "y"))));;

let output = If' (Applic' (LambdaSimple' (["y"], Var' (VarFree "x")), []),
 Applic'
  (LambdaSimple' (["x"],
    Seq'
     [Set' (Var' (VarParam ("x", 0)), Var' (VarFree "y"));
      LambdaSimple' ([],
       Set' (Var' (VarBound ("x", 0, 0)), Const' (Sexpr (Number (Fraction (1, 1))))))]),
  [Const' (Sexpr (Symbol "a"))]),
 LambdaSimple' (["x"], Set' (Var' (VarParam ("x", 0)), Var' (VarFree "y"))));;                       
Printf.printf "%b" (List.for_all2 expr'_eq  [input] [output]);;

